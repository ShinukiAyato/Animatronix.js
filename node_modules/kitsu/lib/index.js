"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var s=require("kitsu-core"),a=e(require("axios")),r=e(require("merge-options")),t=e(require("pluralize"));module.exports=class{constructor(e={}){!1===e.camelCaseTypes?this.camel=e=>e:this.camel=s.camel,"none"===e.resourceCase?this.resCase=e=>e:"snake"===e.resourceCase?this.resCase=s.snake:this.resCase=s.kebab,!1===e.pluralize?this.plural=e=>e:this.plural=t,this.headers=r({Accept:"application/vnd.api+json","Content-Type":"application/vnd.api+json"},e.headers),this.axios=a.create(r({baseURL:e.baseURL||"https://kitsu.io/api/edge",timeout:e.timeout||3e4},e.axiosOptions)),this.fetch=this.get,this.update=this.patch,this.create=this.post,this.remove=this.delete,this.interceptors=this.axios.interceptors}async get(e,a={}){try{const t=r(this.headers,a.headers),i=r({},a.params),[l,h,o]=e.split("/");let p=this.plural(this.resCase(l));h&&(p+="/".concat(h)),o&&(p+="/".concat(this.resCase(o)));const{data:c}=await this.axios.get(p,{headers:t,params:i,paramsSerializer:e=>s.query(e)});return s.deserialise(c)}catch(e){throw s.error(e)}}async patch(e,a,t={}){try{const i=r(this.headers,t.headers),l=r({},t.params),[h,o]=s.splitModel(e,{resourceCase:this.resCase,pluralModel:this.plural}),p=s.serialise(h,a,"PATCH",{camelCaseTypes:this.camel,pluralTypes:this.plural}),c=(null==a?void 0:a.id)?"".concat(o,"/").concat(a.id):o,{data:d}=await this.axios.patch(c,p,{headers:i,params:l,paramsSerializer:e=>s.query(e)});return s.deserialise(d)}catch(e){throw s.error(e)}}async post(e,a,t={}){try{const i=r(this.headers,t.headers),l=r({},t.params),[h,o]=s.splitModel(e,{resourceCase:this.resCase,pluralModel:this.plural}),{data:p}=await this.axios.post(o,s.serialise(h,a,"POST",{camelCaseTypes:this.camel,pluralTypes:this.plural}),{headers:i,params:l,paramsSerializer:e=>s.query(e)});return s.deserialise(p)}catch(e){throw s.error(e)}}async delete(e,a,t={}){try{const i=r(this.headers,t.headers),l=r({},t.params),[h,o]=s.splitModel(e,{resourceCase:this.resCase,pluralModel:this.plural});let p,c;Array.isArray(a)?(p=o,c=a.map(e=>({id:e}))):(p="".concat(o,"/").concat(a),c={id:a});const{data:d}=await this.axios.delete(p,{data:s.serialise(h,c,"DELETE",{camelCaseTypes:this.camel,pluralTypes:this.plural}),headers:i,params:l,paramsSerializer:e=>s.query(e)});return d}catch(e){throw s.error(e)}}async self(e={}){try{const s=r(this.headers,e.headers),a=r(e.params,{filter:{self:!0}});return(await this.get("users",r({headers:s},{params:a}))).data[0]}catch(e){throw s.error(e)}}async request({body:e,method:a,params:t,type:i,url:l,headers:h}){try{var o;a=(null===(o=a)||void 0===o?void 0:o.toUpperCase())||"GET";const{data:p}=await this.axios.request({method:a,url:l,data:["GET","DELETE"].includes(a)?void 0:s.serialise(i,e,a,{camelCaseTypes:this.camel,pluralTypes:this.plural}),headers:r(this.headers,h),params:t,paramsSerializer:e=>s.query(e)});return s.deserialise(p)}catch(e){throw s.error(e)}}};
